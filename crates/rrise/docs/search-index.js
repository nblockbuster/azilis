var searchIndex = JSON.parse('{\
"rrise":{"doc":"Rrise","tn":["AK_ACP_Error","AK_AlreadyConnected","AK_AudioFileHeaderTooLarge","AK_BankAlreadyLoaded","AK_BankReadError","AK_Busy","AK_CallbackBits","AK_Cancelled","AK_CannotAddItseflAsAChild","AK_ChildAlreadyHasAParent","AK_CommandTooLarge","AK_DEFAULT_BANK_IO_PRIORITY","AK_DEFAULT_BANK_THROUGHPUT","AK_DEFAULT_POOL_ID","AK_DEFAULT_PRIORITY","AK_DEFAULT_SWITCH_STATE","AK_DLLCannotLoad","AK_DLLPathNotFound","AK_DataAlignmentError","AK_DataNeeded","AK_DataReady","AK_DeviceNotCompatible","AK_DeviceNotFound","AK_DeviceNotReady","AK_DuplicateUniqueID","AK_Duration","AK_ElementAlreadyInList","AK_EnableGetMusicPlayPosition","AK_EnableGetSourcePlayPosition","AK_EnableGetSourceStreamBuffering","AK_EndOfDynamicSequenceItem","AK_EndOfEvent","AK_FALLBACK_ARGUMENTVALUE_ID","AK_Fail","AK_FileFormatMismatch","AK_FileNotFound","AK_FormatNotReady","AK_IDNotFound","AK_INVALID_AUDIO_OBJECT_ID","AK_INVALID_AUX_ID","AK_INVALID_BANK_ID","AK_INVALID_CHANNELMASK","AK_INVALID_DEVICE_ID","AK_INVALID_FILE_ID","AK_INVALID_GAME_OBJECT","AK_INVALID_OUTPUT_DEVICE_ID","AK_INVALID_PIPELINE_ID","AK_INVALID_PLAYING_ID","AK_INVALID_PLUGINID","AK_INVALID_POOL_ID","AK_INVALID_RTPC_ID","AK_INVALID_UNIQUE_ID","AK_InitBankNotLoaded","AK_InsufficientMemory","AK_InvalidCustomPlatformName","AK_InvalidFile","AK_InvalidFloatValue","AK_InvalidID","AK_InvalidInstanceID","AK_InvalidLanguage","AK_InvalidParameter","AK_InvalidStateGroup","AK_InvalidSwitchType","AK_MAX_PRIORITY","AK_MIDIEvent","AK_MIN_PRIORITY","AK_Marker","AK_MaxReached","AK_MemManagerNotInitialized","AK_MusicPlayStarted","AK_MusicPlaylistSelect","AK_MusicSyncAll","AK_MusicSyncBar","AK_MusicSyncBeat","AK_MusicSyncEntry","AK_MusicSyncExit","AK_MusicSyncGrid","AK_MusicSyncPoint","AK_MusicSyncUserCue","AK_MustBeVirtualized","AK_NoDataNeeded","AK_NoDataReady","AK_NoDistinctListener","AK_NoJavaVM","AK_NoMoreData","AK_NotCompatible","AK_NotImplemented","AK_OpenSLError","AK_PartialSuccess","AK_PathNoVertices","AK_PathNodeAlreadyInList","AK_PathNodeNotInList","AK_PathNotFound","AK_PathNotPaused","AK_PathNotRunning","AK_PlayingIDNotFound","AK_PluginMediaNotAvailable","AK_PluginNotRegistered","AK_ProcessDone","AK_ProcessNeeded","AK_RejectedByFilter","AK_RenderedFX","AK_ResourceInUse","AK_SOUNDBANK_VERSION","AK_SSEInstructionsNotSupported","AK_SpeakerVolumeMatrix","AK_Starvation","AK_StreamMgrNotInitialized","AK_Success","AK_UnknownBankID","AK_UnsupportedChannelConfig","AK_WrongBankVersion","AkAcousticTextureID","AkArgumentValueID","AkAudioObjectID","AkAuxBusID","AkBankID","AkCallbackInfo","AkCallbackType","AkChannelConfig","AkChannelMask","AkCodecID","AkCurveInterpolation","AkCurveInterpolation_Constant","AkCurveInterpolation_Exp1","AkCurveInterpolation_Exp3","AkCurveInterpolation_InvSCurve","AkCurveInterpolation_LastFadeCurve","AkCurveInterpolation_Linear","AkCurveInterpolation_Log1","AkCurveInterpolation_Log3","AkCurveInterpolation_SCurve","AkCurveInterpolation_Sine","AkCurveInterpolation_SineRecip","AkDataCompID","AkDataInterleaveID","AkDataTypeID","AkDeviceID","AkFileID","AkGameObjectID","AkID","AkImageSourceID","AkLPFType","AkListenerPosition","AkMIDIEvent","AkMIDIEvent_tCc","AkMIDIEvent_tChanAftertouch","AkMIDIEvent_tGen","AkMIDIEvent_tNoteAftertouch","AkMIDIEvent_tNoteOnOff","AkMIDIEvent_tPitchBend","AkMIDIEvent_tProgramChange","AkMIDIEvent_tWwiseCmd","AkMemPoolId","AkMidiChannelNo","AkModulatorID","AkOutputDeviceID","AkOutputSettings","AkPanningRule","AkPanningRule_Headphones","AkPanningRule_Speakers","AkPipelineID","AkPitchValue","AkPlayingID","AkPluginID","AkPluginParamID","AkPortNumber","AkPriority","AkRayID","AkReal32","AkResult","AkRtpcID","AkRtpcValue","AkSegmentInfo","AkSoundPosition","AkStateGroupID","AkStateID","AkSwitchGroupID","AkSwitchStateID","AkThreadProperties","AkTimeMs","AkTransform","AkTriggerID","AkUInt32","AkUniqueID","AkVector","AkVolumeValue","Cc","ChanAftertouch","Default","Duration","DynamicSequenceItem","Event","Gen","ID","Marker","Midi","MusicPlaylist","MusicSync","Name","NoteAftertouch","NoteOff","NoteOn","PitchBend","ProgramChange","SpeakerMatrixVolume","WwiseCmd","X","Y","Z","_bitfield_1","_bitfield_align_1","audioDeviceShareset","bitand","bitand_assign","bitor","bitor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","byCc","byNote","byNote","byParam1","byParam2","byProgramNum","byValue","byValue","byValue","byValueLsb","byValueMsb","byVelocity","channelConfig","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","communication","contains","default","default","default","dwAffinityMask","eConfigType","ePanningRule","eq","eq","eq","eq","fBarDuration","fBeatDuration","fGridDuration","fGridOffset","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_position","game_syncs","hash","hash","hash","hash","iActiveDuration","iCurrentPosition","iPostExitDuration","iPreEntryDuration","iRemainingLookAheadTime","idDevice","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_note_off","is_note_on","is_wwise_cmd","is_wwise_cmd_known","is_wwise_cmd_pause","is_wwise_cmd_play","is_wwise_cmd_resume","is_wwise_cmd_seek","is_wwise_cmd_seek_ms","is_wwise_cmd_seek_samples","is_wwise_cmd_stop","memory_mgr","music_engine","nPriority","new","new","new","new1","new_bitfield_1","orientationFront","orientationTop","position","provide","query_params","set_eConfigType","set_uChannelMask","set_uNumChannels","settings","sound_engine","splat","stream_mgr","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uArg","uChannelMask","uCmd","uNumChannels","uStackSize","audio_node_id","audio_node_id","callback_type","callback_type","duration","estimated_duration","event_id","event_id","event_id","event_id","event_id","event_id","game_obj_id","game_obj_id","game_obj_id","game_obj_id","game_obj_id","game_obj_id","game_obj_id","game_obj_id","game_obj_id","identifier","input_config","label","media_id","midi_event","music_sync_type","num_playlist_items","output_config","playing_id","playing_id","playing_id","playing_id","playing_id","playing_id","playing_id","playing_id","playlist_id","playlist_item_done","playlist_selection","position","segment_info","streaming","user_cue_name","init","term","SetRtpcValue","borrow","borrow_mut","clone","clone_into","fmt","for_playing_id","for_target","from","into","new","post_trigger","reset","set","set_state","set_switch","should_bypass_designer_interp","to_owned","try_from","try_into","type_id","with_interp_curve","with_interp_millis","with_value","init","is_initialized","term","init","term","Default","GameObject","Global","PlayingID","RtpcValueType","Unavailable","borrow","borrow_mut","clone","clone_into","fmt","from","get_listener_position","get_listeners","get_listeners_count","get_position","get_rtpc_value","get_state","get_switch","into","to_owned","try_from","try_into","type_id","AkCommSettings","AkDeviceSettings","AkInitSettings","AkInitSettingsPrivate","AkMemSettings","AkMusicSettings","AkPlatformInitSettings","AkStreamMgrSettings","_address","bInitSystemLib","bank_read_buffer_size","bgm_callback","bgm_callback_cookie","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","commSystem","command_queue_size","continuous_playback_look_ahead","debug_out_of_range_check_enabled","debug_out_of_range_limit","default","default","default","default","default","default","default","default","enable_avx_support","enable_game_sync_preparation","fStreamingLookAheadRatio","floor_plane","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","game_units_to_meters","granularity","h_wnd","install_assert_hook","into","into","into","into","into","into","into","into","io_memory","io_memory_alignment","io_memory_size","max_cache_pinned_bytes","max_concurrent_io","max_hardware_timeout_ms","max_num_paths","max_system_audio_objects","monitor_queue_pool_size","num_refills_in_voice","num_samples_per_frame","pfAllocDevice","pfAllocVM","pfDebugFree","pfDebugMalign","pfDebugMalloc","pfDebugRealloc","pfDebugReallocAligned","pfFree","pfFreeDevice","pfFreeVM","pfInitForThread","pfMalign","pfMalloc","pfRealloc","pfReallocAligned","pfSizeOfMemory","pfTermForThread","pfTotalReservedMemorySize","pool_attributes","ports","private_stuff","sample_rate","scheduler_type_flags","settings_main_output","szAppNetworkName","target_auto_stm_buffer_length","task_scheduler_desc","thread_bank_manager","thread_lengine","thread_monitor","thread_output_mgr","thread_properties","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uDevicePageSize","uMemAllocationSizeLimit","uMemoryDebugLevel","uVMPageSize","use_lengine_thread","use_sound_bank_mgr_thread","use_stream_cache","with_plugin_dll_path","PostEvent","add_default_listener","add_flags","add_listener","borrow","borrow_mut","clone","clone_into","flags","fmt","from","init","into","is_initialized","load_bank_by_name","new","playing_id","post","post_with_callback","register_game_obj","register_named_game_obj","remove_default_listener","remove_listener","render_audio","set_default_listeners","set_listeners","set_position","stop_all","term","to_owned","try_from","try_into","type_id","unregister_all_game_obj","unregister_game_obj","init","init_default_stream_mgr","set_current_language","term_default_stream_mgr"],"q":["rriserrise::AkCallbackInfo","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rrise::communication","","rrise::game_syncs","","","","","","","","","","","","","","","","","","","","","","","","rrise::memory_mgr","","","rrise::music_engine","","rrise::query_params","","","","","","","","","","","","","","","","","","","","","","","","rrise::settings","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rrise::sound_engine","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rrise::stream_mgr","","",""],"d":["Generic XMA decoder error.","The stream is already connected to another node.","The file header is too large.","The bank load failed because the bank is already loaded.","Error while reading a bank.","The system is busy and could not process the request.","Bitmask for all callback types.","The requested action was cancelled (not an error).","It is not possible to add itself as its own child.","The child already has a parent.","SDK command is too large to fit in the command queue.","Default bank load I/O priority","Default bank load throughput (1 Mb/ms)","Default pool ID, same as AK_INVALID_POOL_ID","Default sound / I/O priority","Switch selected if no switch has been set yet","Plugin DLL could not be loaded, either because it is not …","Plugin DLL search path could not be found.","A pointer to audio data was not aligned to the platform’…","The consumer needs more.","The provider has available data.","Incompatible Audio device.","The specified device ID does not match with any of the …","Specified ID doesn’t match a valid hardware device: …","Two Wwise objects share the same ID.","Callback triggered when the duration of the sound is known …","The item could not be added because it was already in the …","Enable play position information of music objects, queried …","Enable play position information for use by …","Enable stream buffering information for use by …","Callback triggered when reaching the end of a dynamic …","Callback triggered when reaching the end of an event. …","Fallback argument value ID","The operation failed.","Media file format unexpected","File not found.","Source format not known yet.","The ID was not found.","Invalid audio object ID","Invalid auxiliary bus ID (or no Aux bus ID)","Invalid bank ID","Invalid channel mask","Invalid streaming device ID","Invalid file ID","Invalid game object (may also mean all game objects)","Invalid Device ID","Invalid pipeline ID (for profiling)","Invalid playing ID","Invalid FX ID","Invalid pool ID","Invalid RTPC ID","Invalid unique 32-bit ID","The Init bank was not loaded yet, the sound engine isn’t …","Memory error.","Detecting incompatibility between Custom platform of banks …","An unexpected value causes the file to be invalid.","One parameter has a invalid float value such as NaN, INF …","The ID is invalid.","The InstanceID is invalid.","The language is invalid (applies to the Low-Level I/O).","Something is not within bounds.","The StateGroup is not a valid channel.","Invalid switch type (used with the switch container)","Maximal priority value [0,100]","Enable notifications for MIDI events. AkCallbackInfo can …","Minimal priority value [0,100]","Callback triggered when encountering a marker during …","The maximum was reached.","The memory manager should have been initialized at this …","Callback triggered when a “Play” or “Seek” command …","Callback triggered when music playlist container must …","Use this flag if you want to receive all notifications …","Enable notifications on Music Bar. AkCallbackInfo can be …","Enable notifications on Music Beat. AkCallbackInfo can be …","Enable notifications on Music Entry Cue. AkCallbackInfo …","Enable notifications on Music Exit Cue. AkCallbackInfo can …","Enable notifications on Music Grid. AkCallbackInfo can be …","Enable notifications on Music switch transition …","Enable notifications on Music Custom Cue. AkCallbackInfo …","Sound was Not Allowed to play.","The consumer does not need more.","The provider does not have available data.","No distinct listener provided for AddOutput","No Java VM provided in AkInitSettings.","No more data is available from the source.","Incompatible formats","This feature is not implemented.","OpenSL returned an error.  Check error log for more …","The operation succeeded partially.","Stuff in vertices before trying to start it","This path is already there.","This path is not there.","This path is not known.","Only a paused path can be resumed.","Only a running path can be paused.","Calling a function with a playing ID that is not known.","Plugin media is not available for effect.","Plugin is not registered.  Make sure to implement a …","The executed routine has finished its execution.","A routine needs to be executed on some CPU.","A play request was rejected due to the MIDI filter …","The effect on the node is rendered.","Resource is in use and cannot be released.","Version of the soundbank reader","The machine does not support SSE instructions (required on …","Callback triggered at each frame, letting the client …","Callback triggered when playback skips a frame due to …","The stream manager should have been initialized at this …","The operation was successful.","Trying to load a bank using an ID which is not defined.","Channel configuration is not supported in the current …","The bank version is not compatible with the current bank …","Acoustic Texture ID","Argument value ID","Audio Object ID","Auxilliary bus ID","Run time bank ID","Callback information used for all notifications sent from …","Type of callback. Used as a bitfield in methods …","Defines a channel configuration. Examples: \\\\code …","Channel mask (similar to WAVE_FORMAT_EXTENSIBLE). Bit …","Codec plug-in ID","Curve interpolation types","Constant ( not valid for fading values )","Exp1","Exp3","Inversed S Curve","","Linear (Default)","Log1","Log3","S Curve","Sine","Reciprocal of sine curve","Data compression format ID","Data interleaved state ID","Data sample type ID","I/O device ID","Integer-type file identifier","Game object ID","An ID for functions that can take either a string or …","Image Source ID","Low-pass filter type","Position and orientation of game objects.","Description of a MIDI event","","","","","","","","","Memory pool ID","MIDI channel number, usually 0-15.","Modulator ID","Audio Output device ID","Platform-independent initialization settings of output …","Headphone / speakers panning rules","Left and right positioned 180 degrees apart.","Left and right positioned 60 degrees apart (by default - …","Unique node (bus, voice) identifier for profiling.","Pitch value","Playing ID","Source or effect plug-in ID","Source or effect plug-in parameter ID","Port number","Priority","Unique (per emitter) identifier for an emitter-listener …","","Standard function call result.","Real time parameter control ID","Real time parameter control value","Structure used to query info on active playing segments.","Position and orientation of game objects.","State group ID","State ID","Switch group ID","Switch ID","","Time in ms","Position and orientation of game objects.","Trigger ID","","Unique 32-bit ID","3D vector.","Volume value( also apply to LFE )","Controller event","Channel after touch event","Basic information structure returned for notifications …","Callback information structure corresponding to …","Callback information structure corresponding to …","Callback information structure corresponding to …","Generic event (ie, if no other variant apply)","","Callback information structure corresponding to …","Callback information structure corresponding to …","Callback information structure corresponding to …","Callback information structure corresponding to …","","Note after touch event","Note became Off event","Note became On event","Pitch bent event","Program change event","Callback information structure corresponding to …","Wwise command event","X Position","Y Position","Z Position","","","Unique ID of a custom audio device to be used. Custom …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Channel configuration for this output. Call …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Handles profiling communications.","Checks whether this bitflag has at least one of the bits …","The nul vector <code>[0, 0, 0]</code>.","Creates an AkTransform at <code>[0, 0, 0]</code> with default …","","Affinity mask","","Rule for 3D panning of signals routed to a stereo bus. In …","","","","","Bar Duration in seconds.","Beat Duration in seconds.","Grid duration in seconds.","Grid offset in seconds.","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","In AkVectors, Y is the up component and Z is the forward …","Returns the argument unchanged.","Creates an AkTransform at position <code>p</code> with default …","Creates an AkTransform at position <code>p</code> with default …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Creates an AkTransform at position <code>p</code> with default …","Everything related to RTPC, Switch, States and Triggers.","","","","","Duration of the active region of the segment (between the …","Current position of the segment, relative to the Entry …","Duration of the post-exit region of the segment, in …","Duration of the pre-entry region of the segment, in …","Number of milliseconds remaining in the “looking-ahead”…","Device specific identifier, when multiple devices of the …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Thread priority","The nul vector <code>[0, 0, 0]</code>.","Creates the default AkTransform.","","","","Orientation of the listener","Top orientation of the listener","Position of the listener","","The sound engine parameter query interface.","","","","","","The vector <code>[value, value, value]</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Optional argument for some commands","","See AK_MIDI_WWISE_CMD_* pre-processor definitions","","Thread stack size.","Audio Node ID of finished item","Audio Node ID of playing item","","Would be either AkCallbackType::AK_EndOfEvent, …","Duration of the sound (unit: milliseconds)","Estimated duration of the sound depending on source …","Unique ID of Event, passed to PostEvent::new()","Unique ID of Event, passed to PostEvent::new()","Unique ID of Event, passed to PostEvent::new()","Unique ID of Event, passed to PostEvent::new()","Unique ID of Event, passed to PostEvent::new()","Unique ID of Event, passed to PostEvent::new()","","","","","","","","","","Cue point identifier","Channel configuration of the voice/bus","Label of the marker, read from the file","Media ID of playing item. (corresponds to ‘ID’ …","MIDI event triggered by event","Would be either AkCallbackType::AK_MusicSyncEntry, …","Number of items in playlist node (may be segments or other …","Channel configuration of the output bus","Playing ID of Event, returned by PostEvent::post()","Playing ID of Dynamic Sequence, returned by …","Playing ID of Event, returned by PostEvent::post()","Playing ID of Event, returned by PostEvent::post()","Playing ID of Event, returned by PostEvent::post()","Playing ID of Event, returned by PostEvent::post()","Playing ID of Event, returned by PostEvent::post()","Playing ID of Event, returned by PostEvent::post()","ID of playlist node","Playlist node done: set by sound engine","Selection: set by sound engine","Position in the cue point (unit: sample frames)","Segment information corresponding to the segment …","True if source is streaming, false otherwise","Cue name. Set for notifications …","Initializes the communication module. When this is called, …","Terminates the communication module.","Helper to set or reset RTPCs.","","","","","","Associated playing ID.","Associated game object ID.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","Post the specified trigger.","Post a reset of this RTPC configuration to Wwise.","Post this RTPC configuration to Wwise.","Sets the state of a State Group.","Sets the State of a Switch Group.","<code>True</code> if you want to bypass the internal “slew rate” or …","","","","","When with_interp_millis is used and non-zero, describes …","Duration during which the game parameter is interpolated …","Value to set.","Initialize the default implementation of the Memory …","Query whether the Memory Manager has been successfully …","Terminate the Memory Manager.","Initialize the music engine.","Terminate the music engine.","The value is the Default RTPC.","The value is the game object specific RTPC.","The value is the Global RTPC.","The value is the playing ID specific RTPC.","Enum used to request a specific RTPC Value.","The value is not available for the RTPC specified.","","","","","","Returns the argument unchanged.","Get a listener’s position.","Get a game object’s listeners.","Get a game object’s listeners count.","Get the position of a game object.","Get the value of a real-time parameter control.","Get the state of a state group.","Get the state of a switch group.","Calls <code>U::from(self)</code>.","","","","","Platform-independent initialization settings of …","High-level IO devices initialization settings.","Platform-independent initialization settings of the sound …","","Initialization settings for the default implementation of …","Platform-independent initialization settings of the music …","","Stream Manager initialization settings. \\\\sa","","Tells if the base console communication library should be …","The number of bytes read by the BankReader when new data …","Application-defined audio source change event callback …","Application-defined user data for the audio source change …","","","","","","","","","","","","","","","","","","","","","","","","","Select the device of the communication system. By default, …","Size of the command queue, in bytes","Number of quanta ahead when continuous containers should …","Debug setting: Enable checks for out-of-range (and NAN) …","Debug setting: Only used when …","","Gets the default values of the platform-independent …","Gets the default values of the platform-independent …","Gets the default values of the platform-specific …","Obtain the default initialization settings for the default …","Get the default values for the Stream Manager’s settings.","Get the default values of the initialization settings of …","Gets the communication module’s default initialization …","Enables run-time detection of AVX and AVX2 SIMD support in …","Sets to true to enable AK::SoundEngine::PrepareGameSync …","Multiplication factor for all streaming look-ahead …","Floor plane axis for 3D game object viewing.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","The number of game units in a meter.","I/O requests granularity (typical bytes/request).","Handle to the window associated to the audio. Each game …","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Pointer for I/O memory allocated by user. Pass NULL if you …","I/O memory alignment. It is passed directly to …","Size of memory for I/O (for automatic streams). It is …","Maximum number of bytes that can be “pinned” using …","Maximum number of transfers that can be sent …","Amount of time to wait for HW devices to trigger an audio …","Maximum number of paths for positioning","Dictates how many Microsoft Spatial Sound dynamic objects …","Size of the monitoring queue, in bytes. This parameter is …","Number of refill buffers in voice buffer. 2 == …","Number of samples per audio frame (256, 512, 1024, or …","Device page allocation hook.","Virtual page allocation hook.","(Optional) Memory allocation debugging hook. Used for …","(Optional) Memory allocation debugging hook. Used for …","(Optional) Memory allocation debugging hook. Used for …","(Optional) Memory allocation debugging hook. Used for …","(Optional) Memory allocation debugging hook. Used for …","(Optional) Memory allocation hook.","Device page allocation hook.","Virtual page allocation hook.","(Optional) Thread-specific allocator initialization hook.","(Optional) Memory allocation hook.","(Optional) Memory allocation hook.","(Optional) Memory allocation hook.","(Optional) Memory allocation hook.","(Optional) Memory allocation statistics hook.","(Optional) Thread-specific allocator termination hook.","(Optional) Memory allocation statistics hook.","Attributes for I/O memory. Here, specify the allocation …","Ports used for communication between the Wwise authoring …","Private information","Sampling Rate. Default is 48000 Hz. Use 24000hz for low …","Scheduler type flags.","Main output device settings.","Optional name that will be displayed over network remote …","Targeted automatic stream buffer length (ms). When a …","The defined client task scheduler that AkSoundEngine will …","Bank manager threading properties (its default priority is …","Lower engine threading properties","Monitor threading properties (its default priority is …","Ouput thread threading properties","Scheduler thread properties.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Device memory page size. Defaults to 0 which means …","When non-zero, limits the total amount of virtual and …","Default 0 disabled. 1 debug enabled. 2 stomp allocator …","Virtual memory page size. Defaults to 0 which means …","Use a separate thread for processing audio. If set to …","Use a separate thread for loading sound banks. Allows …","If true the device attempts to reuse IO buffers that have …","When using DLLs for plugins, specify their path. Leave …","Helper to post events to the sound engine.","Add a single listener to the default set of listeners. …","Add flags before posting. Bitmask: see AkCallbackType.","Add a single listener to a game object’s set of …","","","","","Set flags before posting. Bitmask: see AkCallbackType","","Returns the argument unchanged.","Initialize the sound engine.","Calls <code>U::from(self)</code>.","Query whether or not the sound engine has been …","Load a bank synchronously (by Unicode string).","Select an event by name or by ID, to play on a given game …","Advanced users only. Specify the playing ID to target with …","Posts the event to the sound engine.","Posts the event to the sound engine, calling <code>callback</code> …","Registers a game object.","Registers a game object.","Remove a single listener from the default set of …","Remove a single listener from a game object’s set of …","Processes all commands in the sound engine’s command …","Sets the default set of associated listeners for game …","Sets a game object’s associated listeners.","Sets the position of a game object.","Stops the current content playing associated to the …","Terminates the sound engine.","","","","","Unregister all game objects, or all game objects with a …","Unregisters a game object.","Stream Manager factory.","Initializes the default streaming manager, specifying the …","Set the current language once and only once, here. The …","Terminates the default streaming manager."],"i":[2,2,2,2,2,2,1,2,2,2,2,0,0,0,0,0,2,2,2,2,2,2,2,2,2,1,2,1,1,1,1,1,0,2,2,2,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,2,2,0,1,0,1,2,2,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,2,1,1,2,2,2,2,2,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,20,21,21,21,21,20,19,21,21,21,21,19,20,20,20,20,20,21,20,3,3,3,7,7,18,1,1,1,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,1,17,18,19,20,21,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,1,17,18,19,20,21,11,10,13,9,9,15,11,13,14,12,12,10,18,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,1,17,18,19,20,21,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,1,17,18,19,20,21,0,1,3,4,1,8,7,18,2,5,6,1,17,17,17,17,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,1,1,17,18,19,19,20,21,2,3,3,4,4,4,5,6,7,8,9,10,11,12,13,14,15,16,1,17,18,19,19,19,19,20,21,4,0,2,5,6,1,17,17,17,17,17,18,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,1,17,18,19,20,21,20,20,20,20,20,20,20,20,20,20,20,0,0,8,3,4,18,18,7,4,4,4,2,0,7,7,7,0,0,3,0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,1,17,18,19,20,21,2,1,19,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,1,17,18,19,20,21,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,1,17,18,19,20,21,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,1,17,18,19,20,21,16,7,16,7,8,63,64,65,66,64,64,66,64,67,68,69,70,65,71,63,66,64,67,68,69,70,67,70,67,64,68,71,69,70,71,63,66,64,67,68,69,70,69,69,69,67,71,64,71,0,0,0,38,38,38,38,38,38,38,38,38,38,0,38,38,0,0,38,38,38,38,38,38,38,38,0,0,0,0,0,45,45,45,45,0,45,45,45,45,45,45,45,0,0,0,0,0,0,0,45,45,45,45,45,0,0,0,0,0,0,0,0,55,37,57,57,57,56,57,58,59,43,55,44,37,56,57,58,59,43,55,44,37,43,55,44,37,43,55,44,37,37,57,57,57,57,56,57,58,59,43,55,44,37,59,57,44,57,58,59,43,55,44,37,56,57,58,59,43,55,44,37,57,58,59,57,56,57,58,59,43,55,44,37,58,58,58,58,58,57,57,59,57,59,57,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,58,37,57,59,58,57,37,58,57,59,59,59,59,58,43,55,44,37,56,57,58,59,43,55,44,37,56,57,58,59,43,55,44,37,56,57,58,59,43,55,44,37,43,43,43,43,57,57,58,57,0,0,61,0,61,61,61,61,61,61,61,0,61,0,0,61,61,61,61,0,0,0,0,0,0,0,0,0,0,61,61,61,61,0,0,0,0,0,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,1],1],[[1,1]],[[1,1],1],[[1,1]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[2,2],[3,3],[4,4],[5,5],[6,6],[7,7],[8,8],[9,9],[10,10],[11,11],[12,12],[13,13],[14,14],[15,15],[16,16],[1,1],[17,17],[18,18],[19,19],[20,20],[21,21],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[1,1],22],[[],3],[[],4],[[],1],0,[7,23],0,[[2,2],22],[[5,5],22],[[6,6],22],[[1,1],22],0,0,0,0,[[2,24],25],[[3,24],25],[[4,24],25],[[5,24],25],[[6,24],25],[[7,24],25],[[8,24],25],[[9,24],25],[[10,24],25],[[11,24],25],[[12,24],25],[[13,24],25],[[14,24],25],[[15,24],25],[[16,24],25],[[1,24],25],[[1,24],25],[[17,24],25],[[18,24],25],[[19,24],25],[[19,24],25],[[20,24],25],[[21,24],25],[[]],[[],3],[[]],[[],4],[3,4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[26,19],[[]],[27,19],[28,19],[[]],[[]],[[[29,[3]]],4],0,[2],[5],[6],[1],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[20,22],[20,22],[20,22],[20,22],[20,22],[20,22],[20,22],[20,22],[20,22],[20,22],[20,22],0,0,0,[[],3],[[],4],[[30,26,7,6],18],[[31,26,7,6],18],0,0,0,0,[32],0,[[7,23]],[[7,23]],[[7,23]],0,0,[[[0,[[29,[33]],34]]],3],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],27],[[],27],[[],27],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],0,[7,23],0,[7,23],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[37,[[35,[2]]]],[[]],0,[[]],[[]],[38,38],[[]],[[38,24],25],[[38,39],38],[[38,40],38],[[]],[[]],[[[29,[19]],41],38],[[[29,[19]],40],[[35,[2]]]],[38,[[35,[2]]]],[38,[[35,[2]]]],[[[29,[19]],[29,[19]]],[[35,[2]]]],[[[29,[19]],[29,[19]],40],[[35,[2]]]],[[38,22],38],[[]],[[],35],[[],35],[[],36],[[38,5],38],[[38,42],38],[[38,41],38],[43,[[35,[2]]]],[[],22],[[]],[44,[[35,[2]]]],[[]],0,0,0,0,0,0,[[]],[[]],[45,45],[[]],[[45,24],25],[[]],[46,[[35,[47,2]]]],[[40,48],[[35,[[49,[40]],2]]]],[40,[[35,[50,2]]]],[40,[[35,[51,2]]]],[[[29,[19]],[52,[40]],[52,[39]],45],[[35,[45,2]]]],[[[29,[19]]],[[35,[53,2]]]],[[[29,[19]],40],[[35,[54,2]]]],[[]],[[]],[[],35],[[],35],[[],36],0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[43,43],[55,55],[44,44],[37,37],[[]],[[]],[[]],[[]],0,0,0,0,0,[[],56],[[],57],[[],58],[[],59],[[],43],[[],55],[[],44],[[],37],0,0,0,0,[[58,24],25],[[59,24],25],[[43,24],25],[[55,24],25],[[44,24],25],[[37,24],25],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],0,0,0,0,0,0,0,[[57,[60,[28]]],57],0,[40,[[35,[2]]]],[[61,1],61],[[40,40],[[35,[2]]]],[[]],[[]],[61,61],[[]],[[61,1],61],[[61,24],25],[[]],[[57,59],[[35,[2]]]],[[]],[[],22],[[[60,[28]]],[[35,[62,2]]]],[[40,[29,[19]]],61],[[61,39],61],[61,[[35,[39,2]]]],[61,[[35,[39,2]]]],[40,[[35,[2]]]],[[40,[60,[28]]],[[35,[2]]]],[40,[[35,[2]]]],[[40,40],[[35,[2]]]],[22,[[35,[2]]]],[[],[[35,[2]]]],[40,[[35,[2]]]],[[40,[29,[51]]],[[35,[2]]]],[[[52,[40]]]],[[]],[[]],[[],35],[[],35],[[],36],[[],[[35,[2]]]],[40,[[35,[2]]]],[55,[[35,[2]]]],[[55,58,[60,[28]]],[[35,[2]]]],[[[60,[28]]],[[35,[2]]]],[[]]],"p":[[3,"AkCallbackType"],[4,"AkResult"],[3,"AkVector"],[3,"AkTransform"],[4,"AkCurveInterpolation"],[4,"AkPanningRule"],[3,"AkChannelConfig"],[3,"AkThreadProperties"],[3,"AkMIDIEvent_tGen"],[3,"AkMIDIEvent_tNoteOnOff"],[3,"AkMIDIEvent_tCc"],[3,"AkMIDIEvent_tPitchBend"],[3,"AkMIDIEvent_tNoteAftertouch"],[3,"AkMIDIEvent_tChanAftertouch"],[3,"AkMIDIEvent_tProgramChange"],[3,"AkMIDIEvent_tWwiseCmd"],[3,"AkSegmentInfo"],[3,"AkOutputSettings"],[4,"AkID"],[4,"AkMIDIEvent"],[4,"AkCallbackInfo"],[15,"bool"],[6,"AkUInt32"],[3,"Formatter"],[6,"Result"],[6,"AkUniqueID"],[3,"String"],[15,"str"],[8,"Into"],[6,"c_char"],[15,"u16"],[3,"Demand"],[15,"f32"],[8,"Copy"],[4,"Result"],[3,"TypeId"],[3,"AkCommSettings"],[3,"SetRtpcValue"],[6,"AkPlayingID"],[6,"AkGameObjectID"],[6,"AkRtpcValue"],[6,"AkTimeMs"],[3,"AkMemSettings"],[3,"AkMusicSettings"],[4,"RtpcValueType"],[15,"u64"],[6,"AkListenerPosition"],[15,"usize"],[3,"Vec"],[15,"u32"],[6,"AkSoundPosition"],[4,"Option"],[6,"AkStateID"],[6,"AkSwitchStateID"],[3,"AkStreamMgrSettings"],[3,"AkInitSettingsPrivate"],[3,"AkInitSettings"],[3,"AkDeviceSettings"],[3,"AkPlatformInitSettings"],[8,"AsRef"],[3,"PostEvent"],[6,"AkBankID"],[13,"DynamicSequenceItem"],[13,"Duration"],[13,"Default"],[13,"Event"],[13,"Marker"],[13,"Midi"],[13,"MusicPlaylist"],[13,"SpeakerMatrixVolume"],[13,"MusicSync"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
